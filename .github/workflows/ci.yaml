name: CI

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Set up a Minikube cluster on the runner
      - name: Setup minikube
        uses: medyagh/setup-minikube@v0.0.18
        with:
          driver: docker

      # Step 2: Install kubectl and helm
      - name: Install kubectl and helm
        uses: yokawasa/action-setup-kube-tools@v0.11.2
        with:
          setup-tools: |
            kubectl
            helm
          kubectl: '1.25.0'
          helm: '3.11.1'

      # Step 3: Enable the NGINX Ingress addon
      - name: Enable Ingress Addon
        run: minikube addons enable ingress

      # Step 4: Wait for ingress controller to be ready
      # The ingress-nginx-controller runs in the 'ingress-nginx' namespace
      - name: Wait for Ingress Controller
        run: |
          # Wait until kube-dns is ready (often required before ingress)
          kubectl wait --namespace kube-system \
            --for=condition=ready pod \
            --selector=k8s-app=kube-dns \
            --timeout=180s

          # Wait for ingress-nginx-controller pod
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=300s

      # Step 5: Deploy the Helm chart with ingress enabled
      # Adjust path and values according to your chart structure.
      # Ensure your chart supports enabling ingress via values.
      - name: Helm install application
        run: helm install rickandmorty ./helm/rickandmorty --set ingress.enabled=true --wait --timeout 300s

      # Step 6: Get services and ingress info for debugging
      - name: Get services
        run: kubectl get svc --all-namespaces

      - name: Get ingress
        run: kubectl get ingress --all-namespaces

      # Step 7: Retrieve minikube IP for testing ingress
      - name: Get minikube IP
        id: mkip
        run: echo "::set-output name=ip::$(minikube ip)"

      - name: Sleep
        run: sleep 10

      # Step 8: Test endpoints via Ingress using curl --resolve
      # Assuming your ingress host is set to "hello-world.example" in the Helm chart
      - name: Test healthcheck endpoint via Ingress
        run: curl -f --resolve "hello-world.example:80:${{ steps.mkip.outputs.ip }}" http://hello-world.example/healthcheck

      - name: Test characters endpoint via Ingress
        run: curl -f --resolve "hello-world.example:80:${{ steps.mkip.outputs.ip }}" http://hello-world.example/characters
