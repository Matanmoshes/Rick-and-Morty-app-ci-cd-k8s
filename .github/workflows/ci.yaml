name: CI

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Set up Minikube cluster
      - name: Setup minikube
        uses: medyagh/setup-minikube@v0.0.18
        with:
          driver: docker

      # Step 2: Install kubectl and helm
      - name: Install kubectl and helm
        uses: yokawasa/action-setup-kube-tools@v0.11.2
        with:
          setup-tools: |
            kubectl
            helm
          kubectl: '1.25.0'
          helm: '3.11.1'

      # Step 3: Enable NGINX Ingress addon in Minikube
      - name: Enable Ingress Addon
        run: minikube addons enable ingress

      # Step 4: Wait for Ingress Controller to be ready
      - name: Wait for Ingress Controller Pods
        run: |
          # Wait for CoreDNS to be ready
          kubectl wait --namespace kube-system \
            --for=condition=ready pod \
            --selector=k8s-app=kube-dns \
            --timeout=90s

          # Wait for ingress-nginx-controller to be ready
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=180s

      # Step 5: Deploy the application using Helm
      - name: Helm install application
        run: helm install rickandmorty ./helm/rickandmorty --wait

      # Step 6: List services (for debugging)
      - name: Get services
        run: kubectl get svc --all-namespaces

      # Step 7: Port-forward the ingress controller service
      - name: Port forward ingress
        run: kubectl port-forward -n ingress-nginx svc/ingress-nginx-controller 8080:80 &
      
      - name: Sleep
        run: sleep 10

      # Step 8: Test endpoints via Ingress
      - name: Test healthcheck endpoint
        run: 'curl -f -H "Host: rickandmorty.local" http://localhost:8080/healthcheck'

      - name: Test characters endpoint
        run: 'curl -f -H "Host: rickandmorty.local" http://localhost:8080/characters'
